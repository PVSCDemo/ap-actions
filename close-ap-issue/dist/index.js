(()=>{var __webpack_modules__={389:module=>{module.exports=eval("require")("@actions/core")},977:module=>{module.exports=eval("require")("@actions/github")},837:e=>{"use strict";e.exports=require("util")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var _=__webpack_module_cache__[e];if(_!==undefined){return _.exports}var r=__webpack_module_cache__[e]={exports:{}};var t=true;try{__webpack_modules__[e](r,r.exports,__nccwpck_require__);t=false}finally{if(t)delete __webpack_module_cache__[e]}return r.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const{inspect:e}=__nccwpck_require__(837);const _=__nccwpck_require__(389);const r=__nccwpck_require__(977);async function run(){const _={token:getInput("token"),repository:getInput("repository"),payload:getInput("payload")};debug(`Inputs: ${e(_)}`);try{const e=new Octokit({auth:_.token,baseUrl:_.repository});const r=e.rest.search.issuesAndPullRequests("q=label:Defect "+payload.card.id)}catch(_){debug(e(_));setFailed(_.message);if(_.message=="Resource not accessible by integration"){_error(`See this action's readme for details about this error`)}}}})();module.exports=__webpack_exports__})();